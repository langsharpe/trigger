#!/bin/bash
# Trigger: Run a command when a change occurs on the filesystem
# Usage:
#       trigger [<paths>] -- <command>

# Functions

# Remove temporary files
cleanup()
{
	if [ -p "$FSEVENT_PIPE" ]
	then
		rm "$FSEVENT_PIPE"
	fi

	if [ -d "$TEMP_DIR" ]
	then
		rmdir "$TEMP_DIR"
	fi

	exit $?
}

show_usage()
{
	echo "Trigger: Run a command whan a change occurs on the filesystem" >&2
	echo "Usage: trigger [OPTIONS] [<paths>] -- <command>" >&2
   	echo "    -c        Clear Screen" >&2
   	echo "    -f        File Level Watch Mode (sets -F flag in fsevent_watch)" >&2
   	echo "    -d        Debug Output" >&2
   	echo "    -v        Verbose Output" >&2
}

# Parse command line.
WATCH_DIRS=""
TRIGGER_CMD=""
CLEAR_SCREEN=false
VERBOSE=false
FILELEVEL=false
DEBUGOUTPUT=false

while getopts cvfd O
do	case "$O" in
		c)		CLEAR_SCREEN=true;;
		v)		VERBOSE=true;;
		f)		FILELEVEL=true;;
		d)		DEBUGOUTPUT=true;;
		[?])	show_usage
				exit 1;;
	esac
done
shift $(($OPTIND - 1))

# Loop through options until we reach "--", or the end
while [ "$1" != "--" -a $# -ne 0 ]; do
	WATCH_DIRS="$WATCH_DIRS $1"
	shift
done

# shift out the "--" option. The rest is the command to run
shift
TRIGGER_CMD=$*

# If the command is empty, then show a usage message and exit.
if [ -z "$TRIGGER_CMD" ]
then
	show_usage
	exit 1
fi

# Watch the current directory if none specified
if [ -z "$WATCH_DIRS" ]
then
	WATCH_DIRS="."
	if $VERBOSE
	then
	    echo No directory specified, so watching: $WATCH_DIRS
     fi
fi

# Temporary directory to put a named pipe in
TEMP_DIR=`mktemp -d -t trigger`

# Named pipe to read/write filesystem events
FSEVENT_PIPE=$TEMP_DIR/fsevent
mkfifo $FSEVENT_PIPE

# Write file system events into the pipe
if $FILELEVEL
then
  FSEVENT_WATCH_CMD="$(dirname $0)/fsevent_watch -f classic -F"
else
  FSEVENT_WATCH_CMD="$(dirname $0)/fsevent_watch -f classic"
fi
$FSEVENT_WATCH_CMD $WATCH_DIRS 1> $FSEVENT_PIPE 2> /dev/null &

# Register a signal handler for if (when) we are told to exit
trap cleanup SIGINT

if $VERBOSE
then
	echo Watching: $WATCH_DIRS
fi
if $DEBUGOUTPUT
then
    echo TEMP_DIR: $TEMP_DIR
    echo FSEVENT_PIPE: $FSEVENT_PIPE
    echo FSEVENT_WATCH_CMD: $FSEVENT_WATCH_CMD
    echo TRIGGER_CMD: $TRIGGER_CMD
fi
# Read from the pipe, and run the trigger command for every line read
cat $FSEVENT_PIPE | while read
do
	if $CLEAR_SCREEN
	then
		clear
	fi
	$TRIGGER_CMD
done

# If we manage to get here without an interupt, then cleanup
cleanup
